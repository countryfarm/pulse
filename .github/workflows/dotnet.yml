name: .NET Build, Test & Coverage

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'   # adjust if you’re targeting 8.0

    - name: Restore dependencies
      run: dotnet restore Pulse.sln

    - name: Build
      run: dotnet build Pulse.sln --no-restore --configuration Release

    - name: Run tests with coverage
      run: dotnet test Pulse.sln --no-build --configuration Release --collect:"XPlat Code Coverage" --results-directory ./TestResults

    - name: Install ReportGenerator
      run: dotnet tool install --global dotnet-reportgenerator-globaltool

    - name: Generate coverage summary
      run: |
        reportgenerator \
          -reports:./TestResults/**/coverage.cobertura.xml \
          -targetdir:./coveragereport \
          -reporttypes:TextSummary

        echo "=== Coverage Summary ==="
        cat ./coveragereport/Summary.txt

    - name: Enforce coverage threshold
      run: |
        COVERAGE=$(grep -oP 'Line coverage: \K[0-9]+(\.[0-9]+)?' ./coveragereport/Summary.txt | head -1)
        echo "Detected line coverage: $COVERAGE%"
        THRESHOLD=70.0
        awk -v c=$COVERAGE -v t=$THRESHOLD 'BEGIN { if (c+0 < t+0) { exit 1 } }'

    - name: Upload coverage report
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: coverage-report
        path: ./TestResults/**/coverage.cobertura.xml